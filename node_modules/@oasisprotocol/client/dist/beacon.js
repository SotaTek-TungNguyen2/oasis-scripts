"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setEpochWrapper = exports.pvssRevealWrapper = exports.pvssCommitWrapper = exports.ERR_BEACON_NOT_AVAILABLE_CODE = exports.MODULE_NAME = exports.BACKEND_PVSS = exports.BACKEND_INSECURE = exports.METHOD_SET_EPOCH = exports.METHOD_PVSS_REVEAL = exports.METHOD_PVSS_COMMIT = void 0;
const consensus = require("./consensus");
/**
 * MethodPVSSCommit is the method name for a PVSS commitment.
 */
exports.METHOD_PVSS_COMMIT = 'beacon.PVSSCommit';
/**
 * MethodPVSSReveal is the method name for a PVSS reveal.
 */
exports.METHOD_PVSS_REVEAL = 'beacon.PVSSReveal';
/**
 * MethodSetEpoch is the method name for setting epochs.
 */
exports.METHOD_SET_EPOCH = '000_beacon.SetEpoch';
/**
 * BackendInsecure is the name of the insecure backend.
 */
exports.BACKEND_INSECURE = 'insecure';
/**
 * BackendPVSS is the name of the PVSS backend.
 */
exports.BACKEND_PVSS = 'pvss';
/**
 * ModuleName is a unique module name for the beacon module.
 */
exports.MODULE_NAME = 'beacon';
/**
 * ErrBeaconNotAvailable is the error returned when a beacon is not
 * available for the requested height for any reason.
 */
exports.ERR_BEACON_NOT_AVAILABLE_CODE = 1;
function pvssCommitWrapper() {
    return new consensus.TransactionWrapper(exports.METHOD_PVSS_COMMIT);
}
exports.pvssCommitWrapper = pvssCommitWrapper;
function pvssRevealWrapper() {
    return new consensus.TransactionWrapper(exports.METHOD_PVSS_REVEAL);
}
exports.pvssRevealWrapper = pvssRevealWrapper;
function setEpochWrapper() {
    return new consensus.TransactionWrapper(exports.METHOD_SET_EPOCH);
}
exports.setEpochWrapper = setEpochWrapper;
